{"version":3,"sources":["components/Loading.js","components/Panel.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","style","display","alignItems","justifyContent","flexDirection","minWidth","version","id","x","y","maxHeight","maxWidth","viewBox","fill","d","attributeName","attributeType","type","dur","from","to","repeatCount","Panel","children","header","footer","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAiDeA,EA/CC,WACZ,OACI,qBAAKC,MAAO,CACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,cAAe,SACfC,SAAU,QALd,SAOI,sBAAKC,QAAQ,MAAMC,GAAG,KAAKC,EAAE,MAAMC,EAAE,MAAMT,MAAO,CAACU,UAAU,QAAQC,SAAS,SAC1EC,QAAQ,cAAc,oBAAkB,kBAD5C,UAEI,sBAAMC,KAAK,UAAUC,EAAE,8IAAvB,SACI,kCACIC,cAAc,YACdC,cAAc,MACdC,KAAK,SACLC,IAAI,KACJC,KAAK,UACLC,GAAG,YACHC,YAAY,iBAEpB,sBAAMR,KAAK,UAAUC,EAAE,uIAAvB,SACI,kCACIC,cAAc,YACdC,cAAc,MACdC,KAAK,SACLC,IAAI,KACJC,KAAK,UACLC,GAAG,aACHC,YAAY,iBAEpB,sBAAMR,KAAK,UAAUC,EAAE,kHAAvB,SACI,kCACIC,cAAc,YACdC,cAAc,MACdC,KAAK,SACLC,IAAI,KACJC,KAAK,UACLC,GAAG,YACHC,YAAY,uBCtBrBC,G,MAjBD,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAC/B,OACI,qBAAKC,UAAU,gBAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,eAAf,SACKF,IAEL,qBAAKE,UAAU,aAAf,SACKH,IAEL,qBAAKG,UAAU,eAAf,SACKD,W,MCkBNE,MA1Bf,WACE,OACE,qBAAKD,UAAU,gBAAf,SACE,qBAAKA,UAAU,iCAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,EAAD,CAAOF,OAAQ,aAAf,SACE,cAAC,EAAD,QAGJ,qBAAKE,UAAU,kBAAf,SACE,cAAC,EAAD,CAAOF,OAAQ,aAAf,SACE,cAAC,EAAD,QAGJ,qBAAKE,UAAU,kBAAf,SACE,cAAC,EAAD,CAAOF,OAAQ,aAAf,SACE,cAAC,EAAD,gBCVCI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cae6ce5d.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            flexDirection: \"column\",\r\n            minWidth: \"100%\"\r\n        }}>\r\n            <svg version=\"1.1\" id=\"L7\" x=\"0px\" y=\"0px\" style={{maxHeight:'150px',maxWidth:'150px'}}\r\n                viewBox=\"0 0 100 100\" enable-background=\"new 0 0 100 100\">\r\n                <path fill=\"#61dafb\" d=\"M31.6,3.5C5.9,13.6-6.6,42.7,3.5,68.4c10.1,25.7,39.2,38.3,64.9,28.1l-3.1-7.9c-21.3,8.4-45.4-2-53.8-23.3c-8.4-21.3,2-45.4,23.3-53.8L31.6,3.5z\">\r\n                    <animateTransform\r\n                        attributeName=\"transform\"\r\n                        attributeType=\"XML\"\r\n                        type=\"rotate\"\r\n                        dur=\"2s\"\r\n                        from=\"0 50 50\"\r\n                        to=\"360 50 50\"\r\n                        repeatCount=\"indefinite\" />\r\n                </path>\r\n                <path fill=\"#61dafb\" d=\"M42.3,39.6c5.7-4.3,13.9-3.1,18.1,2.7c4.3,5.7,3.1,13.9-2.7,18.1l4.1,5.5c8.8-6.5,10.6-19,4.1-27.7c-6.5-8.8-19-10.6-27.7-4.1L42.3,39.6z\">\r\n                    <animateTransform\r\n                        attributeName=\"transform\"\r\n                        attributeType=\"XML\"\r\n                        type=\"rotate\"\r\n                        dur=\"1s\"\r\n                        from=\"0 50 50\"\r\n                        to=\"-360 50 50\"\r\n                        repeatCount=\"indefinite\" />\r\n                </path>\r\n                <path fill=\"#61dafb\" d=\"M82,35.7C74.1,18,53.4,10.1,35.7,18S10.1,46.6,18,64.3l7.6-3.4c-6-13.5,0-29.3,13.5-35.3s29.3,0,35.3,13.5L82,35.7z\">\r\n                    <animateTransform\r\n                        attributeName=\"transform\"\r\n                        attributeType=\"XML\"\r\n                        type=\"rotate\"\r\n                        dur=\"2s\"\r\n                        from=\"0 50 50\"\r\n                        to=\"360 50 50\"\r\n                        repeatCount=\"indefinite\" />\r\n                </path>\r\n            </svg>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Loading","import React from \"react\"\r\nimport './Panel.css'\r\nconst Panel = ({ children, header, footer }) => {\r\n    return (\r\n        <div className='panel-wrapper'>\r\n            <div className='panel-container'>\r\n                <div className='panel-header'>\r\n                    {header}\r\n                </div>\r\n                <div className='panel-body'>\r\n                    {children}\r\n                </div>\r\n                <div className='panel-footer'>\r\n                    {footer}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Panel","// import './App.css';\r\nimport Loading from './components/Loading';\r\nimport Panel from './components/Panel'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='app-container'>\r\n      <div className='container overflow-hidden mt-2'>\r\n        <div className='row'>\r\n          <div className='col-12 col-sm-4'>\r\n            <Panel header={'Panel Head'}>\r\n              <Loading />\r\n            </Panel>\r\n          </div>\r\n          <div className='col-12 col-sm-4'>\r\n            <Panel header={'Panel Head'}>\r\n              <Loading />\r\n            </Panel>\r\n          </div>\r\n          <div className='col-12 col-sm-4'>\r\n            <Panel header={'Panel Head'}>\r\n              <Loading />\r\n            </Panel>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}